#!/bin/bash
#
# Initialize waydroid on first boot if it exists
# as CI fails to initalize it

set -e

[ -f "/usr/bin/waydroid" ] && WAYDROID=true

if [ "${WAYDROID}" == "true" ]; then
	# waydroid needs this to init
	while [ ! -e "/dev/ashmem" ]; do
		echo "Waiting for /dev/ashmem to appear..."
		sleep 1
	done

	# waydroid also needs this to init
	while [ ! -e "/dev/anbox-binder" ]; do
		echo "Waiting for /dev/anbox-binder to appear..."
		sleep 1
	done

	# this one comes from waydroid itself, needed to detect if device is halium or mainline
	while true; do
		vndk_version=$(getprop ro.vndk.version)
		if [ -n "$vndk_version" ] && [ "$vndk_version" -ge 19 ]; then
			break
		fi
		sleep 1
	done

	# waydroid checks for IAllocator to detect which gralloc it should use, without that it initializes too early and chooses swiftshader
	binder-wait android.hardware.graphics.allocator@4.0::IAllocator/default

	waydroid init -f || true

	# now restart all services
	if [ -f "/usr/lib/systemd/system/waydroid-container.service" ]; then
		systemctl restart waydroid-container || true
		sleep 1
	fi

	if [ -f "/usr/lib/systemd/system/waydroid-sensors.service" ]; then
		systemctl restart waydroid-sensors || true
		sleep 1
	fi

	if [ -f "/usr/lib/systemd/system/waydroid-notification-server.service" ]; then
		systemctl restart waydroid-notification-server.service || true
		sleep 1
	fi

	if [ -f "/usr/lib/systemd/system/waydroid-statechange-server.service" ]; then
		systemctl restart waydroid-statechange-server.service || true
		sleep 1
	fi
fi
